local currentFilePathlocal startTimelocal sampleDurationlocal fileExtensionlocal fileNamelocal exportDirlocal exportPath# get values from quicktime playertell application "QuickTime Player"		# get current file path	set currentFilePath to the file of the front document		# get current playback time in seconds	set startTime to get the (current time of the front document) div 1		# get current movie duration 	set movieDuration to duration of the front document	end tell# get movie extensionset fileExtension to name extension of (info for currentFilePath)set fileName to name of (info for currentFilePath)# get sample duration from user dialogrepeat	set dialogResult to (display dialog "Sample duration? In seconds. Sample will start from the current playback position." buttons {"Next", "Cancel"} default answer "")	if (text returned of dialogResult) is "" then		set sampleDuration to 0		exit repeat	else		try			set sampleDuration to (text returned of dialogResult) as integer			if sampleDuration > 0 and sampleDuration < movieDuration then exit repeat		end try		beep	end if	display dialog "The duration needs to be a valid integer between 1 and " & movieDuration div 1 & "!" buttons {"Enter again", "Cancel"} default button 1end repeat# set export paths and convert to POSIXset exportDir to choose folder with prompt "Select output folder:"set exportPath to POSIX path of exportDir & fileName & "_HEVC optimized." & fileExtensionset currentFilePath to POSIX path of currentFilePath# treat startTime and sampleDuration based on if we want sample or notif sampleDuration is 0 then	set startTime to ""	set sampleDuration to ""else	set startTime to "-ss " & startTime	set sampleDuration to "-t " & sampleDurationend if# use ffmpeg to export the movietell application "Terminal"	do script "ffmpeg " & startTime & " " & sampleDuration & " -i " & quoted form of currentFilePath & " -vcodec libx265 -crf 20 -tag:v hvc1 -preset fast " & quoted form of exportPathend tell